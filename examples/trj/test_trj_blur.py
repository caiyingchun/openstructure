# trajectory generated by Raimund Dutzler
from PyQt4 import QtCore

class Anim(QtCore.QTimer):
    def __init__(self,cg,go):
        QtCore.QTimer.__init__(self)
        self.cg_=cg
        self.go_=go
        self.frame_=0
        QtCore.QObject.connect(self, QtCore.SIGNAL("timeout()"), self.OnTimer)
        
    def OnTimer(self):
        self.step()
        
    def step(self):
        self.frame_=(self.frame_+1)%self.cg_.GetFrameCount()
        go.BlurSnapshot()
        self.cg_.CopyFrame(self.frame_)
        go.UpdatePositions()

cg = io.LoadCHARMMTraj("sample.pdb","sample.dcd")
eh=cg.GetEntity()
ev=eh.Select("not ele=H")
go=gfx.Entity("mol",gfx.SIMPLE, ev)
go.SetBlur(True)

scene.Add(go)
scene.SetCenter(go.GetCenter())
scene.AutoAutoslab(True)

anim=Anim(cg,go)
anim.start(10)
