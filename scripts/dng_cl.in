#!/bin/bash
#------------------------------------------------------------------------------
# This file is part of the OpenStructure project <www.openstructure.org>
#
# Copyright (C) 2008-2010 by the OpenStructure authors
#
# This library is free software; you can redistribute it and/or modify it under
# the terms of the GNU Lesser General Public License as published by the Free
# Software Foundation; either version 3.0 of the License, or (at your option)
# any later version.
# This library is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this library; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
#------------------------------------------------------------------------------

#
# convenience wrapper for non-gui dng
#
# Self detect important directories
SCRIPT_NAME=$0
BIN_DIR=`dirname $SCRIPT_NAME`
export DNG_ROOT=$BIN_DIR/..
export PATH=$BIN_DIR:$PATH

# set ld_library_path and pythonhome for bundle (commented except in linux bundles)

#export LD_LIBRARY_PATH=$DNG_ROOT/@LIBDIR@:$LD_LIBRARY_PATH
#export PYTHONHOME=$DNG_ROOT

# retrieve absolute path to python executable
pyexec=""
if [ -z "$DNG_ATTACH_VALGRIND" ]; then
  pyexec="@PYTHON_BINARY@"
else
  pyexec="valgrind --leak-check=full @PYTHON_BINARY@"
fi

if [ ! -f "$pyexec" ]; then 
  echo "Error: Python executable '$pyexec' not found!"
  exit
fi

set -o noglob

# decide whether to start interactively or not
# interactive mode can be forced by setting -i as a dng_cl option
interactive=""
if [ $# == 0 ];then
  interactive="-i"
else
  opts=""
  for argument in $*;do 
    if [ $argument == "-i" ] ;then
      interactive="-i"
    else
      opts=$opts" "$argument
    fi
  done
fi
# finally pass control to python instance
exec $pyexec $interactive -c "
import sys, os, platform
if platform.machine()=='x86_64':
  sys.path.insert(0, os.getenv('DNG_ROOT')+'/lib64/dng/pymod')
else:
  sys.path.insert(0,os.getenv('DNG_ROOT')+'/lib/dng/pymod')
     
from dng import io, mol, seq, gfx, SetPrefixPath
try: 
  from dng import img
except ImportError:
  pass
SetPrefixPath(os.getenv('DNG_ROOT'))
import os.path
HistoryFile=os.path.expanduser('~/.dng_history')
InGUIMode=False

#try:
 # import readline, rlcompleter

#  def SaveHistory(historyPath):
#    readline.write_history_file(historyPath)
#
#  readline.parse_and_bind('tab: complete')
#  if os.path.isfile(HistoryFile):
#    readline.read_history_file(HistoryFile)
#except ImportError:
#  pass
  
gfx.set_offscreen_mode()
sys.ps1='dng> '
sys.ps2='..... '
print ''
sys.argv=sys.argv[1:]
_dngrc=os.path.join(os.getenv('HOME'), '.dngrc')
if os.path.exists(_dngrc):
  try:
    exec(open(_dngrc))
  except Exception, e:
    print e

if(len(sys.argv)>0):
  script=sys.argv[0]
  execfile(script)
"  $opts

